"""
## 더하기 사이클

## 문제
1. 0 보다 크거나 같고, 99보다 작거나 같은 정수가 주어질 때 다음과 같은 연산 진행
- 주어진 수가 10보다 작은 경우 : 앞에 0을 붙여 두자리 수로 만들고, 각 자리의 숫자를 더함
- 주어진 수의 가장 오른쪽 자리 수와 앞에서 구한 합의 가장 오른쪽 자리 수를 이어 붙임

2. 예시
- 26
- 2 + 6 = 8
- 68 ( 붙임 )
- 6 + 8 = 14
- 84 ( 붙임 )
- 8 + 4 = 12
- 42 ( 붙임 )
- 4 + 2 = 6
- 26 ( 원래대로 돌아옴 )
- 더하고, 붙이는 과정이 1번

3. N 이 주어졌을 때, N 의 사이클의 길이를 구하는 프로그램 작성하기


## 입력
1. N

## 출력
1. N 의 사이클 길이

## 풀이
1. 문제 조건에 맞게 풀이
- 숫자가 10보다 작은 경우, 앞에 0 붙이기 ( 예시 : 4 -> 04 )
- 숫자 쪼개기
- 쪼갠 숫자를 더하기
- 쪼갠 숫자의 가장 오른쪽 부분과 더한 숫자의 가장 오른쪽 부분을 붙이기
- 원래 숫자가 나올 때 까지 반복

"""
import sys

input = sys.stdin.readline

n = input().strip()

n_int = int(n)

cnt = 0

while True:
    # 10보다 작을경우
    if n_int < 10:
        n = '0' + n
    # 쪼개기
    n_list = list(map(int, n))

    # 더하기
    n_sum = str(sum(n_list))

    # 합치기
    n = str(n_list[-1]) + n_sum[-1]

    cnt += 1
    if int(n) == n_int:
        break

print(cnt)



